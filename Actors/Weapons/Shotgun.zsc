Class EquestriaShotgun : DoomEquestriaWeapon replaces Shotgun
{
	Default
	{
		//$Title Shotgun
		Weapon.SelectionOrder 1300;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "Shell";

		Inventory.PickupSound "pickup/shotgun";
		Inventory.PickupMessage "$GOTSHOTGUN";
		Obituary "$OB_MPSHOTGUN";
		Tag "$TAG_SHOTGUN";
	}
	States
	{
	Spawn:
		SHOT A -1;
		Stop;
		
	Select:
		SHTG A 0 A_SetCrossHair(9);
		
		//SHTG A 0 A_PlaySoundEX("misc/w_pkup", 1);

		SHTG A 1 A_Raise();
		Wait;
	/*
	SelectAnimation:
		SHTG A 0 A_PlaySoundEX("misc/w_pkup", 1);
		SHTG GFEDCB 1;
		Goto Ready;*/
		
	Deselect:
		TNT1 A 0 A_TakeInventory("KickCheck", 999);
		
		SHTG A 1 A_Lower();
		Wait;
	
	Ready:
		TNT1 A 0 A_JumpIfInventory("KickCheck", 1, "Kick.Normal");
		
		SHTG A 1 A_WeaponReady();
		Loop;
		
	Fire:
		TNT1 A 0 A_JumpIf(callACS("CamRecoilToggle")==1,"Fire.CamRecoil");
		
		SHTG A 7
		{
			A_FireBullets (5.6, 0, 7, 5, "ShotgunPuff");
			A_FireProjectile("ShotgunLight", 0, 0, 0, -5);
			A_WeaponOffset(0, 45, WOF_KEEPX | WOF_INTERPOLATE);
			A_StartSound ("weapons/shotgf", CHAN_WEAPON);
			A_GunFlash();
			A_Overlay(3, "Offset");
		}
		Goto Pump;
	
	Fire.CamRecoil:
		SHTG A 7
		{
			A_FireBullets (5.6, 0, 7, 5, "ShotgunPuff");
			A_FireProjectile("ShotgunLight", 0, 0, 0, -5);
			A_WeaponOffset(0, 45, WOF_KEEPX | WOF_INTERPOLATE);
			A_StartSound ("weapons/shotgf", CHAN_WEAPON);
			A_GunFlash();
			A_Overlay(3, "Offset");
			A_Overlay(2, "CamRecoil");
		}
		Goto Pump;
		
	Pump:
		SHTG B 2;
		SHTG C 2;
		SHTG DEFGHIJ 1;
		SHTG IH 4;
		SHTG GFEDCB 1;
		SHTG A 3;
		SHTG A 7 A_ReFire;
		Goto Ready;
	
	Flash:
		SHTF A 1 Bright;
		SHTF B 3 Bright;
		SHTF A 2 Bright;
		Goto LightDone;
		
	CamRecoil:
		TNT1 A 1 A_SetPitch(pitch-3, SPF_INTERPOLATE);
		TNT1 AAA 1 A_SetPitch(pitch+0.5, SPF_INTERPOLATE);
		TNT1 AAAAAA 1 A_SetPitch(pitch+0.25, SPF_INTERPOLATE);
		Stop;

	Offset:
		TNT1 A 4 A_WeaponOffset(0, 45, WOF_KEEPX | WOF_INTERPOLATE);
		TNT1 A 3 A_WeaponOffset(0, 32, WOF_KEEPX | WOF_INTERPOLATE);
		Stop;
	}
}

Class ShotgunLight : SuperShotgunLight
{}
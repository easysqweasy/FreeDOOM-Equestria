Class EquestriaRocketLauncher : DoomEquestriaWeapon replaces RocketLauncher
{
	Default
	{
		//$Title Rocket Launcher
		Weapon.BobStyle "InverseSmooth";
		Weapon.SelectionOrder 2500;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 2;
		Weapon.AmmoType "RocketAmmo";
		
		+WEAPON.NOAUTOFIRE
		
		Inventory.PickupMessage "$GOTLAUNCHER";
		Inventory.PickupSound "pickup/rocklauncher";
		
		Tag "$TAG_ROCKETLAUNCHER";
	}
	States
	{
	Spawn:
		LAUN A -1;
		Stop;
	
	Select:
		MISG A 0 A_SetCrossHair(13);
		
		MISG A 1 A_Raise();
		Wait;
	
	Deselect:
		TNT1 A 0 A_TakeInventory("KickCheck", 999);
		TNT1 A 0 A_JumpIf(health <= 0, "DeathCheck");
		
		MISG A 1 A_Lower();
		Wait;
	
	Ready:
		TNT1 A 0 A_JumpIfInventory("KickCheck", 1, "Kick.Normal");
		
		MISG A 1 A_WeaponReady();
		Loop;
	
	Fire:
		MISG A 8 A_GunFlash();
		MISG B 2;
		
		TNT1 A 0 A_JumpIf(callACS("CamRecoilToggle")==1, "Fire.CamRecoil");
		
		MISG B 6
		{
			A_FireProjectile("EquestriaRocket", 0, 1, 0, -8);
			A_WeaponOffset(0, 42, WOF_KEEPX | WOF_INTERPOLATE);
		}
		MISG A 6 A_WeaponOffset(0, 32, WOF_KEEPX | WOF_INTERPOLATE);
		MISG B 0 A_ReFire();
		Goto Ready;
	
	Fire.CamRecoil:
		MISG B 6
		{
			A_FireProjectile("EquestriaRocket", 0, 1, 0, -8);
			A_WeaponOffset(0, 42, WOF_KEEPX | WOF_INTERPOLATE);
			A_Overlay(2, "CamRecoil");
		}
		MISG A 6 A_WeaponOffset(0, 32, WOF_KEEPX | WOF_INTERPOLATE);
		MISG B 0 A_ReFire();
		Goto Ready;
	
	Flash:
		TNT1 A 8;
		MISF A 3 Bright;
		MISF B 2 Bright;
		MISF C 2;
		MISF D 1;
		Goto LightDone;
	
	CamRecoil:
		TNT1 A 0 A_JumpIf(callACS("CamRecoilToggle")==0, "Off");
		
		TNT1 B 1 A_ZoomFactor(0.975, ZOOM_NOSCALETURNING);
		TNT1 B 1 A_ZoomFactor(0.985, ZOOM_NOSCALETURNING);
		TNT1 A 1 A_SetPitch(pitch-2, SPF_INTERPOLATE);
		TNT1 B 1 A_ZoomFactor(1, ZOOM_NOSCALETURNING);
		TNT1 C 1 A_WeaponOffset(0, 32, WOF_KEEPX | WOF_INTERPOLATE);
		TNT1 A 1 A_SetPitch(pitch+0.5, SPF_INTERPOLATE);
		TNT1 AA 1 A_SetPitch(pitch+0.25, SPF_INTERPOLATE);
		TNT1 AAAAA 1 A_SetPitch(pitch+0.2, SPF_INTERPOLATE);
		Stop;
	}
}

Class EquestriaRocket : Rocket replaces Rocket
{
	Default
	{
		+RollSprite +RollCenter
		+ForceXYBillBoard
		-RocketTrail
		
		Decal "Scorch";
	}
	States
	{
	Spawn:
		MISL A 2 Bright A_SpawnItemEx("EquestriaRocketSmoke");
		Loop;
		
	Death:
		//MISL B 0 A_SetRoll(random(-359, 359))
		
		TNT1 AAAAAAAA 0 A_SpawnProjectile("Smoke", random(-32, 32), 0, random (0, 360), CMF_AIMDIRECTION, random (0, 359));

		MISL B 6 Bright
		{
			A_Explode();
			
			A_QuakeEx(4, 4, 4, 16, 0, 200, "", QF_SCALEDOWN, 0,0,0, 1);
			
			A_SpawnItemEx("ScorchFloorCheck", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
		}
		
		TNT1 AAAA 0 A_SpawnProjectile("SplashSmoke", random(-20, 20), random (-40, 40), random (0, 360), CMF_AIMDIRECTION, random(0, -90));

		MISL C 4 Bright;
		MISL D 1 A_FadeOut(0.1);
		Wait;
	}
}

Class EquestriaRocketSmoke : Smoke replaces RocketSmokeTrail
{	Default{	+NOINTERACTION	VSpeed 0.65;}
	States
	{
	Spawn:
		TNT1 A 2;
		RSMK A random(2,4)
		{
			bSPRITEFLIP = randompick(0, 1);
			A_SetRoll(random(-359, 359));
		}
		RSMK A 2;
		RSMK AAAAAAAAAABBBBBBBBCCCCCCDDDD 1
		{
			A_FadeOut(0.02);
			A_SetScale(Scale.X + 0.025, Scale.Y + 0.025);
		}
		RSMK E 1 A_FadeOut(0.05);
		Wait;
	}
}